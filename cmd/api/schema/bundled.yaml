openapi: 3.0.2
info:
  description: |-
    This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [http://swagger.io](http://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in OAS3.

    Some useful links:
    - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
    - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
  version: 1.0.20-SNAPSHOT
  title: Swagger Petstore - OpenAPI 3.0
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: /v3
tags:
  - name: pet
    description: Everything about your Pets
paths:
  /pets:
    post:
      tags:
        - pet
      summary: Create a new pet to the store
      description: Create a new pet to the store
      operationId: createPet
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                additionalProperties: false
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/PetResponse'
        '405':
          description: Invalid input
      requestBody:
        description: Create a new pet in the store
        required: true
        content:
          application/json:
            schema:
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/CreatePet'
  /pets/{petId}:
    get:
      tags:
        - pet
      summary: Find pet by ID
      description: Returns a single pet
      operationId: getPetById
      parameters:
        - name: petId
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: string
            x-go-type: googleuuid.UUID
            x-go-type-import:
              path: github.com/google/uuid
              name: googleuuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/PetResponse'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
    put:
      tags:
        - pet
      summary: Update an existing pet
      description: Update an existing pet by Id
      operationId: updatePet
      parameters:
        - name: petId
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: string
            x-go-type: googleuuid.UUID
            x-go-type-import:
              path: github.com/google/uuid
              name: googleuuid
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetResponse'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
      requestBody:
        description: Update an existent pet in the store
        required: true
        content:
          application/json:
            schema:
              additionalProperties: false
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/UpdatePet'
    delete:
      tags:
        - pet
      summary: Deletes a pet
      description: ''
      operationId: deletePet
      parameters:
        - name: petId
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: string
            x-go-type: googleuuid.UUID
            x-go-type-import:
              path: github.com/google/uuid
              name: googleuuid
      responses:
        '204':
          description: No content
        '400':
          description: Invalid pet value
components:
  schemas:
    PetCreateAttributes:
      type: object
      additionalProperties: false
      required:
        - name
      properties:
        name:
          type: string
          example: Lucy
    CreatePet:
      required:
        - type
        - attributes
      properties:
        type:
          type: string
          enum:
            - pet
          default: pet
        attributes:
          $ref: '#/components/schemas/PetCreateAttributes'
      type: object
      additionalProperties: false
    PetResponseAttributes:
      type: object
      additionalProperties: false
      required:
        - name
      properties:
        name:
          type: string
          example: Lucy
    PetResponse:
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
          x-go-type: googleuuid.UUID
          x-go-type-import:
            path: github.com/google/uuid
            name: googleuuid
          example: 8d186a5c-219e-4072-af8c-c659871c75a0
        type:
          type: string
          enum:
            - pet
          default: pet
        attributes:
          $ref: '#/components/schemas/PetResponseAttributes'
      type: object
      additionalProperties: false
    UpdatePet:
      required:
        - id
        - type
      properties:
        id:
          type: string
          x-go-type: googleuuid.UUID
          x-go-type-import:
            path: github.com/google/uuid
            name: googleuuid
          example: 8d186a5c-219e-4072-af8c-c659871c75a0
        type:
          type: string
          enum:
            - pet
          default: pet
        attributes:
          type: object
          additionalProperties: false
          required:
            - name
          properties:
            name:
              type: string
              example: Lucy
      type: object
      additionalProperties: false
